# OpenTelemetry Collector
HOST_FILESYSTEM=/
DOCKER_SOCK=/var/run/docker.sock
OTEL_COLLECTOR_HOST=otelcol
OTEL_COLLECTOR_PORT_GRPC=4317
OTEL_COLLECTOR_PORT_HTTP=4318
OTEL_COLLECTOR_CONFIG=./src/otel/collector-config.yaml
OTEL_COLLECTOR_CONFIG_EXTRAS=./src/otel/otelcol-config-extras.yml
OTEL_EXPORTER_OTLP_ENDPOINT=http://${OTEL_COLLECTOR_HOST}:${OTEL_COLLECTOR_PORT_GRPC}
PUBLIC_OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://localhost:8080/otlp-http/v1/traces

# Dependent images
COLLECTOR_CONTRIB_IMAGE=otel/opentelemetry-collector-contrib:0.108.0
GRAFANA_IMAGE=grafana/grafana:11.2.0
JAEGERTRACING_IMAGE=jaegertracing/all-in-one:1.60
PROMETHEUS_IMAGE=quay.io/prometheus/prometheus:v2.54.1

# Service 
SERVICE_PORT=8080
SERVICE_ADDR=service:${SERVICE_PORT}
SERVICE_DOCKERFILE=./src/service/Dockerfile

# Service B
SERVICE_B_PORT=8081
SERVICE_B_ADDR=service-b:${SERVICE_PORT}
SERVICE_B_DOCKERFILE=./src/service-b/Dockerfile

# ********************
# Telemetry Components
# ********************
# Grafana
GRAFANA_SERVICE_PORT=3000
GRAFANA_SERVICE_HOST=grafana

# Jaeger
JAEGER_SERVICE_PORT=16686
JAEGER_SERVICE_HOST=jaeger

# Prometheus
PROMETHEUS_SERVICE_PORT=9090
PROMETHEUS_SERVICE_HOST=prometheus
PROMETHEUS_ADDR=${PROMETHEUS_SERVICE_HOST}:${PROMETHEUS_SERVICE_PORT}